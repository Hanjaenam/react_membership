{"version":3,"sources":["Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Header","styled","header","_templateObject","List","ul","_templateObject2","Item","li","_templateObject3","props","current","SLink","Link","_templateObject4","withRouter","_ref","pathname","location","react_default","a","createElement","to","Container","div","Section_templateObject","Title","span","Section_templateObject2","Grid","Section_templateObject3","Section","title","children","Loader_templateObject","Loader","Loader_Container","split","map","word","role","aria-label","key","Message_templateObject","Text","Message_templateObject2","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","concat","bgUrl","Rating","Poster_templateObject3","ImageContainer","Poster_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imgUrl","rating","year","_ref$isMovie","isMovie","react_router_dom","Poster_Container","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","nowPlaying","upcoming","popular","loading","error","Fragment","Helmet_default","HomePresenter_Container","Components_Section","movie","Components_Poster","original_title","poster_path","vote_average","release_date","Components_Message","propType","PropTypes","array","bool","isRequired","string","api","axios","create","baseURL","params","api_key","language","page","moviesApi","get","movieDetail","append_to_reponse","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","original_name","first_air_date","TVContainer","TV_TVPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","moveResults","func","SearchContainer","event","preventDefault","_this","searchByTerm","target","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","DetailPresenter_templateObject","Content","DetailPresenter_templateObject2","Cover","DetailPresenter_templateObject3","bgImage","Backdrop","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","p","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","genre","index","name","overview","object","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parsedId","parseInt","isNaN","console","log","Detail_DetailPresenter","Router","Components_Header","react_router","path","exact","component","Home","TV","Search","Detail","from","GlobalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","Components_GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.686683dd.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n\n// <a>태그를 사용하면 안된다! -> 새로고침을 하게 됩니다.\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  @keyframes scale {\n    50% {\n      transform: translateY(-5px);\n    }\n    100% {\n      transform: translateY(0);\n    }\n  }\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  span {\n    font-size: 20px;\n    font-weight: 600;\n    &:nth-child(1) {\n      animation: scale 1s linear 0s infinite;\n    }\n    &:nth-child(2) {\n      animation: scale 1s linear 0.1s infinite;\n    }\n    &:nth-child(3) {\n      animation: scale 1s linear 0.2s infinite;\n    }\n    &:nth-child(4) {\n      animation: scale 1s linear 0.3s infinite;\n    }\n    &:nth-child(5) {\n      animation: scale 1s linear 0.4s infinite;\n    }\n    &:nth-child(6) {\n      animation: scale 1s linear 0.5s infinite;\n    }\n    &:nth-child(7) {\n      animation: scale 1s linear 0.6s infinite;\n    }\n  }\n`;\n\nexport default () => (\n  <Container>\n    {\"Loading\".split(\"\").map(word => (\n      <span role=\"text\" aria-label=\"loading\" key={word}>\n        {word}\n      </span>\n    ))}\n  </Container>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => `https://image.tmdb.org/t/p/w300${props.bgUrl}`});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.2s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: -5px;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.2s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.6;\n    }\n    ${Rating} {\n      opacity: 0.8;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imgUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image bgUrl={imgUrl} />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title.length > 15 ? `${title.substring(0, 15)}...` : title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | NomFlix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imgUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imgUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imgUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propType = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"6e2a2f117dc2dc8a7670435f37e17c8f\",\n    language: \"en-US\",\n    page: \"1\"\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_reponse: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_reponse: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import HomeContainer from \"./HomeContainer\";\nexport default HomeContainer;\n","import React from 'react';\nimport HomePresenter from './HomePresenter';\nimport { moviesApi } from 'api';\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movies information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n  padding: 0 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV | NomFlix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imgUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imgUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Shows\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imgUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propType = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true\n  };\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      this.setState({\n        topRated,\n        airingToday,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"cant find TV information\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n  padding: 0 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  handleSubmit,\n  updateTerm,\n  loading,\n  error,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | NomFlix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input placeholder=\"Search Movies or Tv Shows...\" value={searchTerm} onChange={updateTerm} />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imgUrl={movie.poster_path}\n                isMovie={true}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imgUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date && show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n        {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\n          <Message text=\"Nothing Found\" color=\"#95a5a6\" />\n        )}\n      </>\n    )}\n  </Container>\n);\n// submit -> input창에서 enter : 기본적으로 서버에 전송하고 \"새로고침\" -> state reset\n\nSearchPresenter.propType = {\n  moveResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\nexport default SearchContainer;\n","import React from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi, tvApi } from 'api';\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: '',\n    loading: false,\n    error: null,\n  };\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== '') {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async term => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: 'cant find results.' });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from 'Components/Loader';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | NomFlix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\n      <Content>\n        <Cover bgImage={`https://image.tmdb.org/t/p/original${result.poster_path}`} />\n        <Data>\n          <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>⚬</Divider>\n            <Item>{result.runtime ? result.runtime : result.episode_run_time} min </Item>\n            <Divider>⚬</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1 ? genre.name : `${genre.name} / `,\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propType = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"api\";\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({\n        error: \"Cant find anything\"\n      });\n    } finally {\n      this.setState({\n        result,\n        loading: false\n      });\n    }\n  }\n  render() {\n    const { result, error, loading } = this.state;\n    console.log(this.state);\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" exact component={TV} />\n      {/* <Route path=\"/tv/popular\" render={() => <h1>Popular</h1>} /> */}\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n/**\n * @description [<Redirect>]\n * <Redirect from=\"*\" to=\"/\" />\n * 일치하는 페이지가 하나도 없으면 어느 페이지든 받아서 \"/\"로 보내준다.\n * @description [<Switch>]\n * 한 번에 오직 하나의 Route만 Render하게 해준다.\n * - /tv/popular\n *  1. /tv에 exact를 해주지 않으면 <h1>Popular</h1>가 나타나지 않는다\n *  2. 왜냐하면 switch는 하나의 component만 render를 해주기 때문에\n *  3. 이를 방지하려면 /tv에 exact를 넣어줄 것. (정확하게 일치해야 render가 된다.)\n *                          (넣지 않으면 /tv로 시작하는 뭐가 들어와도 일치된다.)\n */\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyles = createGlobalStyle`\n${reset};\na {\n  text-decoration:none;\n  color: inherit;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  font-size: 12px;\n  background-color: rgba(20, 20,20,1);\n  color: white;\n  padding-top: 50px;\n}\n`;\nexport default GlobalStyles;\n","import React from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from 'Components/GlobalStyles';\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}